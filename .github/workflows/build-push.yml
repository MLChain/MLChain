name: Build and Push API & Web

on:
  push:
    branches:
      - "main"
      - "deploy/dev"
  release:
    types: [published]

concurrency:
  group: build-push-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  Mlchain_WEB_IMAGE_NAME: ${{ vars.MLCHAIN_WEB_IMAGE_NAME || 'mlchain/mlchain-web' }}
  Mlchain_API_IMAGE_NAME: ${{ vars.MLCHAIN_API_IMAGE_NAME || 'mlchain/mlchain-api' }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.MLCHAIN_API_IMAGE_NAME }}
            ${{ env.MLCHAIN_WEB_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,format=long
            type=raw,value=latest

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.MLCHAIN_API_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Web image
        uses: docker/build-push-action@v6
        with:
          images: ${{ env[matrix.image_name_env] }}
          tags: |
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-') }}
            type=ref,event=branch
            type=sha,enable=true,priority=100,prefix=,suffix=,format=long
            type=raw,value=${{ github.ref_name }},enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env[matrix.image_name_env] }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env[matrix.image_name_env] }}:${{ steps.meta.outputs.version }}
